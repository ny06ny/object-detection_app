import streamlit as st
from ultralytics import YOLO
from PIL import Image
import numpy as np
import requests
from io import BytesIO
import os

st.title("X·ª¨ L√ù ƒê·ªêI T∆Ø·ª¢NG TRONG ·∫¢NH")

# T·∫°o t√πy ch·ªçn t·∫£i file ho·∫∑c nh·∫≠p URL
option = st.radio("Ch·ªçn c√°ch nh·∫≠p h√¨nh ·∫£nh:", ("T·∫£i file l√™n", "Nh·∫≠p URL"))

image = None

if option == "T·∫£i file l√™n":
    uploaded_file = st.file_uploader("T·∫£i l√™n ·∫£nh c·ªßa b·∫°n", type=["jpg", "png", "jpeg"])
    if uploaded_file is not None:
        image = Image.open(uploaded_file)

elif option == "Nh·∫≠p URL":
    url = st.text_input("Nh·∫≠p URL ·∫£nh:")
    if url: 
        try:
            response = requests.get(url)
            response.raise_for_status()
            image = Image.open(BytesIO(response.content))
        except requests.exceptions.RequestException as e:
            st.error(f"‚ö†Ô∏è Kh√¥ng th·ªÉ t·∫£i ·∫£nh t·ª´ URL. L·ªói: {e}")

if image:
    st.image(image, caption="·∫¢nh g·ªëc", use_container_width=True)

    # Load m√¥ h√¨nh YOLOv8
    model_path = r"C:\Users\laptop\.vscode\runs\detect\train2\weights\best.pt"
    if not os.path.exists(model_path):
        st.error(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y m√¥ h√¨nh t·∫°i: {model_path}")
    else:
        try:
            model = YOLO(model_path)
        except Exception as e:
            st.error(f"‚ö†Ô∏è Kh√¥ng th·ªÉ t·∫£i m√¥ h√¨nh YOLO. L·ªói: {e}")
        else:
            # Chuy·ªÉn ·∫£nh sang m·∫£ng NumPy
            image_np = np.array(image)

            # Th·ª±c hi·ªán nh·∫≠n di·ªán ƒë·ªëi t∆∞·ª£ng
            with st.spinner("üîç ƒêang nh·∫≠n di·ªán ƒë·ªëi t∆∞·ª£ng..."):
                results = model(image_np, conf=0.5)

            # Ki·ªÉm tra k·∫øt qu·∫£ v√† hi·ªÉn th·ªã ·∫£nh ƒë√£ nh·∫≠n di·ªán   
            if results and results[0].boxes is not None:
                annotated_image = results[0].plot()
                st.image(annotated_image, caption="·∫¢nh ƒë√£ nh·∫≠n di·ªán", use_container_width=True)
            else:
                st.warning("‚ö†Ô∏è Kh√¥ng ph√°t hi·ªán ƒë·ªëi t∆∞·ª£ng n√†o trong ·∫£nh.")
                
            # Nh·∫≠p t√™n file tr∆∞·ªõc khi t·∫£i xu·ªëng
            file_name = st.text_input("Nh·∫≠p t√™n file ƒë·ªÉ t·∫£i xu·ªëng:", "detected_image.png")

            # Chuy·ªÉn ·∫£nh sang ƒë·ªãnh d·∫°ng c√≥ th·ªÉ t·∫£i v·ªÅ
            img_pil = Image.fromarray(annotated_image)
            img_buffer = BytesIO()
            img_pil.save(img_buffer, format="PNG")
            img_bytes = img_buffer.getvalue()

            # T·∫°o n√∫t t·∫£i ·∫£nh
            st.download_button(
                label="üì• T·∫£i ·∫£nh xu·ªëng",
                data=img_bytes,
                file_name=file_name if file_name else "detected_image.png",
                mime="image/png"
            )
